@use "../../../../../styles/variables" as vars;
@use "../../../../../styles/mixins" as mixins;

// Component-specific styles only
// Most styling is now handled by utility classes in the template

.set-item {
  // Only component-specific styles that can't be handled by utilities
  min-width: 0; // Allow content to shrink in flex container

  // Deleting state override
  &.deleting-set {
    background: rgba(vars.$color-black, 0.03) !important;
    border-color: vars.$border-color-medium !important;

    .set-content {
      opacity: 0.7;
    }
  }
}

// Exercise title word wrapping
.exercise-title {
  word-wrap: break-word;
  hyphens: auto;
  line-height: vars.$line-height-tight;
}

// Responsive separator for set details
.set-details {
  .reps-container:not(:last-child)::after {
    content: "â€¢";
    position: absolute;
    right: -10px;
    color: vars.$text-hint;
    font-weight: vars.$font-weight-regular;

    @include mixins.media-max(xs) {
      display: none;
    }
  }
}

// Loading state skeleton effect
.set-item.loading {
  .reps,
  .weight {
    @include mixins.skeleton-loading();
    border-radius: vars.$border-radius-xs;
    color: transparent;
    height: 1.2em;
    display: inline-block;
    min-width: 60px;
  }

  .exercise-icon {
    color: vars.$color-gray-300;
  }
}

// Validation tooltip styling
:host ::ng-deep .validation-tooltip {
  background-color: vars.$color-error !important;
  color: vars.$color-white !important;
  font-size: vars.$font-size-xs !important;
  max-width: 250px !important;
  word-wrap: break-word !important;

  .mat-mdc-tooltip {
    background-color: vars.$color-error !important;
  }
}

// Dark theme support
@media (prefers-color-scheme: dark) {
  .set-item {
    background: rgba(vars.$color-white, 0.05) !important;
    border-color: rgba(vars.$color-white, 0.12) !important;

    &:hover {
      background: rgba(vars.$color-white, 0.08) !important;
      border-color: rgba(vars.$color-white, 0.16) !important;
    }

    &.invalid-field {
      background: rgba(vars.$color-error, 0.1) !important;
      border-left-color: vars.$color-error-light !important;
    }

    &.deleting-set {
      background: rgba(vars.$color-white, 0.03) !important;
      border-color: rgba(vars.$color-white, 0.08) !important;
    }
  }

  .exercise-title {
    color: vars.$text-primary-dark !important;
  }

  .set-details {
    color: vars.$text-secondary-dark !important;

    .reps-container:not(:last-child)::after {
      color: vars.$text-disabled-dark;
    }
  }

  mat-icon {
    &.text-primary {
      color: vars.$color-primary-light !important;
    }

    &.text-warning {
      color: vars.$color-warning-light !important;
    }

    &.text-error {
      color: vars.$color-error-light !important;
    }
  }
}

// High contrast support
@include mixins.high-contrast {
  .set-item {
    border-color: vars.$border-color-dark !important;

    &.deleting-set {
      border-color: vars.$text-primary !important;
    }
  }

  .set-details .reps-container:not(:last-child)::after {
    color: vars.$text-primary;
  }
}

// Print styles
@media print {
  .set-item {
    box-shadow: none !important;
    border: vars.$border-width-thin solid vars.$color-black !important;
  }

  mat-icon {
    color: vars.$color-black !important;
  }

  .set-details .reps-container:not(:last-child)::after {
    color: vars.$color-black;
  }
}
