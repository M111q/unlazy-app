.edit-set-page {
  max-width: 600px;
  margin: 0 auto;
  padding: 1rem;

  .page-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;

    h1 {
      margin: 0;
      font-size: 1.5rem;
      font-weight: 500;
      color: var(--mat-sys-on-surface);
    }

    button {
      flex-shrink: 0;
    }
  }

  .loading-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem 1rem;
    text-align: center;

    p {
      margin-top: 1rem;
      color: var(--mat-sys-on-surface-variant);
    }
  }

  .error-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem 1rem;
    text-align: center;

    .error-icon {
      font-size: 3rem;
      width: 3rem;
      height: 3rem;
      color: var(--mat-sys-error);
      margin-bottom: 1rem;
    }

    h2 {
      margin: 0 0 0.5rem 0;
      color: var(--mat-sys-error);
      font-size: 1.25rem;
      font-weight: 500;
    }

    p {
      margin: 0 0 2rem 0;
      color: var(--mat-sys-on-surface-variant);
      max-width: 400px;
    }
  }

  .form-container {
    .full-width {
      width: 100%;
      margin-bottom: 1rem;
    }

    mat-card {
      mat-card-header {
        margin-bottom: 1rem;

        mat-card-title {
          color: var(--mat-sys-on-surface);
          font-size: 1.25rem;
          font-weight: 500;
        }

        mat-card-subtitle {
          color: var(--mat-sys-on-surface-variant);
          margin-top: 0.25rem;
        }
      }

      mat-card-content {
        padding-top: 0;

        form {
          display: flex;
          flex-direction: column;
          gap: 0.5rem;
        }

        mat-form-field {
          &:last-child {
            margin-bottom: 0;
          }

          // Readonly field styling
          &:has(input[readonly]) {
            .mat-mdc-text-field-wrapper {
              background-color: var(--mat-sys-surface-variant);
              opacity: 0.7;
            }
          }
        }
      }

      mat-card-actions {
        padding-top: 1.5rem;
        gap: 0.5rem;

        button {
          min-width: 100px;

          .button-spinner {
            margin-right: 0.5rem;
          }

          mat-icon {
            margin-right: 0.5rem;
          }

          // Disabled state for unchanged form
          &[disabled]:not(.mat-mdc-button-disabled) {
            opacity: 0.6;
            cursor: not-allowed;
          }
        }
      }
    }
  }
}

// Responsive design
@media (max-width: 768px) {
  .edit-set-page {
    padding: 0.5rem;

    .page-header {
      margin-bottom: 1rem;

      h1 {
        font-size: 1.25rem;
      }
    }

    .form-container {
      mat-card {
        mat-card-actions {
          flex-direction: column-reverse;
          align-items: stretch;

          button {
            width: 100%;
            margin: 0;

            &:first-child {
              margin-top: 0.5rem;
            }
          }
        }
      }
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .edit-set-page {
    .error-container {
      .error-icon {
        filter: contrast(1.2);
      }
    }

    .form-container {
      mat-card-content {
        mat-form-field:has(input[readonly]) {
          .mat-mdc-text-field-wrapper {
            border: 2px solid var(--mat-sys-outline-variant);
          }
        }
      }
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .edit-set-page {
    .loading-container {
      mat-spinner {
        animation: none;
      }
    }

    .button-spinner {
      animation: none;
    }
  }
}

// Dark theme adjustments
@media (prefers-color-scheme: dark) {
  .edit-set-page {
    .page-header h1 {
      color: var(--mat-sys-on-surface, #ffffff);
    }

    .loading-container p,
    .error-container p {
      color: var(--mat-sys-on-surface-variant, #c7c7c7);
    }

    .form-container {
      mat-card-content {
        mat-form-field:has(input[readonly]) {
          .mat-mdc-text-field-wrapper {
            background-color: var(--mat-sys-surface-container-high);
          }
        }
      }
    }
  }
}

// Focus management
.edit-set-page {
  button:focus-visible,
  input:focus-visible {
    outline: 2px solid var(--mat-sys-primary);
    outline-offset: 2px;
  }
}

// Form validation states
.edit-set-page {
  .mat-mdc-form-field.mat-form-field-invalid {
    .mat-mdc-text-field-wrapper {
      .mat-mdc-form-field-outline .mat-mdc-notched-outline-notch {
        border-color: var(--mat-sys-error);
      }
    }
  }

  // Highlight changed fields
  .mat-mdc-form-field.mat-form-field-should-float:not(.mat-form-field-invalid) {
    .mat-mdc-text-field-wrapper {
      .mat-mdc-form-field-outline .mat-mdc-notched-outline-notch {
        border-color: var(--mat-sys-primary);
        border-width: 2px;
      }
    }
  }
}

// Animation for form changes
.edit-set-page {
  .form-container {
    mat-card-actions {
      button[mat-raised-button] {
        transition: all 0.2s ease-in-out;

        &:not([disabled]) {
          transform: translateY(0);
          box-shadow: var(--mat-sys-elevation-level2);
        }

        &[disabled] {
          transform: translateY(1px);
          box-shadow: var(--mat-sys-elevation-level1);
        }
      }
    }
  }
}

// Success and error snackbar styles (global)
::ng-deep {
  .success-snackbar {
    --mdc-snackbar-container-color: var(--mat-sys-primary-container);
    --mdc-snackbar-supporting-text-color: var(--mat-sys-on-primary-container);
  }

  .error-snackbar {
    --mdc-snackbar-container-color: var(--mat-sys-error-container);
    --mdc-snackbar-supporting-text-color: var(--mat-sys-on-error-container);
  }
}
